name: Docker

on:
  push:
    paths:
      - '.github/workflows/**'
      - '**.py'
      - Pipfile
      - Pipfile.lock
      - .dockerignore
      - Dockerfile

jobs:
  Build:
    name: Build and maybe push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          echo "::set-env name=USER::$( dirname $GITHUB_REPOSITORY | awk '{print tolower($0)}' )"
          echo "::set-env name=REPO::$( basename $GITHUB_REPOSITORY | awk '{print tolower($0)}' )"
          echo "::set-env name=URL::https://github.com/$( dirname $GITHUB_REPOSITORY | awk '{print tolower($0)}' )/$( basename $GITHUB_REPOSITORY | awk '{print tolower($0)}' )"

      - name: Build
        run: |
          docker build . \
            --tag greeter-service:latest \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%d") \
            --build-arg VCS_REF=$GITHUB_SHA \
            --build-arg VERSION=$GITHUB_SHA \
            --build-arg VENDOR=$USER \
            --build-arg AUTHOR=$USER \
            --build-arg GIT_REPO=$URL \
            --build-arg DOCUMENTATION=$URL

      - name: Check for available repositories
        id: push_options
        env:
          DUMMY: "value"
          # Uncomment to enable pushing
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Set the relevant credentials and uncomment to enable pushing
          # DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          # DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS_ECR_REPO_NAME: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          if [[ -z "${GITHUB_TOKEN}" ]]; then
            echo "Missing GitHub Package Registry credentials, skipping."

            echo "::set-output name=push_to_github_package_registry::false"
          else
            echo "Found GitHub GitHub Package Registry credentials, will try to push the image."

            echo "::set-output name=push_to_github_package_registry::true"
          fi

          if [[ -z "${DOCKERHUB_USERNAME}" || -z "${DOCKERHUB_PASSWORD}" ]]; then
            echo "Missing DockerHub credentials, skipping."

            echo "::set-output name=push_to_dockerhub::false"
          else
            echo "Found DockerHub credentials, will try to push the image."

            echo "::set-output name=push_to_dockerhub::true"
          fi

          if [[ -z "${AWS_ACCESS_KEY_ID}" || -z "${AWS_SECRET_ACCESS_KEY}" || -z "${AWS_ECR_REPO_NAME}" ]]; then
            echo "Missing AWS credentials, skipping."

            echo "::set-output name=push_to_aws_ecr::false"
          else
            echo "Found AWS credentials, will try to push the image."

            echo "::set-output name=push_to_aws_ecr::true"
          fi

      - name: Login to GitHub Package Repository
        if: steps.push_options.outputs.push_to_github_package_registry == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login docker.pkg.github.com --username $USER --password $GH_TOKEN

      - name: Tag and push SHA
        if: steps.push_options.outputs.push_to_github_package_registry == 'true'
        run: |
          docker tag greeter-service:latest docker.pkg.github.com/$USER/$REPO/greeter-service:commit-$GITHUB_SHA
          docker push docker.pkg.github.com/$USER/$REPO/greeter-service:commit-$GITHUB_SHA

      - name: Login to Dockerhub
        if: steps.push_options.outputs.push_to_dockerhub == 'true'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

      - name: Tag and push SHA to Dockerhub
        if: steps.push_options.outputs.push_to_dockerhub == 'true'
        run: |
          docker tag greeter-service:latest $USER/$REPO:commit-$GITHUB_SHA
          docker push $USER/$REPO:commit-$GITHUB_SHA

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: steps.push_options.outputs.push_to_aws_ecr == 'true'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        if: steps.push_options.outputs.push_to_aws_ecr == 'true'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and push SHA to ECR
        if: steps.push_options.outputs.push_to_aws_ecr == 'true'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker tag greeter-service:latest $ECR_REGISTRY/$ECR_REPOSITORY:commit-$GITHUB_SHA
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:commit-$GITHUB_SHA
